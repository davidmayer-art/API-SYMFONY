<?php //ApiPlatform_Core_OpenApi_Model_PathItem

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'ApiPlatform\\Core\\OpenApi\\Model\\PathItem',
                'methods',
                'ref',
                'summary',
                'description',
                'get',
                'put',
                'post',
                'delete',
                'options',
                'head',
                'patch',
                'trace',
                'servers',
                'parameters',
                'extensionProperties',
            ],
            'attributesMetadata' => [
                [
                    'methods' => $o[1],
                    'ref' => $o[2],
                    'summary' => $o[3],
                    'description' => $o[4],
                    'get' => $o[5],
                    'put' => $o[6],
                    'post' => $o[7],
                    'delete' => $o[8],
                    'options' => $o[9],
                    'head' => $o[10],
                    'patch' => $o[11],
                    'trace' => $o[12],
                    'servers' => $o[13],
                    'parameters' => $o[14],
                    'extensionProperties' => $o[15],
                ],
            ],
        ],
    ],
    $o[0],
    []
); }];
